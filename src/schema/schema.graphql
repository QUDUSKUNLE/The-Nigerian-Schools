type Query {
  user(id: ID!): User
  users(filter: String, skip: Int, first: Int): Users
  school(id: ID!): School
  schools(filter: String, skip: Int, first: Int): Schools
}

type Mutation {
  signup(name: String!, email: String!, password: String!, confirmPassword: String!): AuthPayload
  login(email: String!, password: String!): AuthPayload
  put(id: ID!, name: String, email: String): NewProfile!
  delete(id: ID!): Message
  register(input: ObjectInput): NewSchool
  updateSchool(id: ID!, input: UpdateSchool): NewSchool
}

type Users {
  count: Int,
  users: [User]
}

type Schools {
  count: Int,
  schools: [School]
}

type User {
  id: ID!
  email: String!
  name: String!
  availability: Data!
}
type AuthPayload {
  token: String!
  user: User
}
type NewProfile {
  message: String
  success: Data
  user: User
}
type Message {
  message: String!
  success: Data
}
type NewSchool {
  message: String!
  school: School
}
type School {
  id: ID!
  school_name: String!
  school_address: String!
  school_convention: SchoolConvention
  school_class: SchoolClass
  school_section: SchoolSection
  school_type: SchoolType
  school_contacts: SchoolContact
}

type UpdatedSchoolInformation {
  id: ID!
  school_name: String
  school_address: String
  school_convention: SchoolConvention
  school_class: SchoolClass
  school_section: SchoolSection
  school_type: SchoolType
  school_contacts: SchoolContact
}
type SchoolConvention {
  conventional: Data!
  muslim: Data!
  christian: Data!
}
type SchoolClass {
  private: Data!
  public: Data!
}
type SchoolSection {
  creche: Data!
  nursery: Data!
  after_school: Data!
  primary: Data!
  junior_secondary: Data!
  senior_secondary: Data!
}
type SchoolType {
  day_school: Data!
  boarding: Data!
}
type SchoolContact {
  email: String!
  phone_number: String!
}
enum Data {
  YES
  NO
}

input ObjectInput {
  school_name: String!
  school_address: String!
  school_class: Class!
  school_convention: Convention!
  school_section: Section!
  school_population: Population!
  school_contacts: Contacts!
  school_type: SType!
}

input UpdateSchool {
  school_name: String
  school_address: String
  school_class: Class
  school_convention: Convention
  school_section: Section
  school_population: Population
  school_contacts: Contacts
  school_type: SType
  school_approval: Approval
  school_images: Images
}
input Class {
  private: Data!
  public: Data!
}
input Convention {
  conventional: Data!
  muslim: Data!
  christian: Data!
}
input Section {
  creche: Data!
  nursery: Data!
  after_school: Data!
  primary: Data!
  junior_secondary: Data!
  senior_secondary: Data!
}
input Population {
  creche: Int!
  nursery: Int!
  after_school: Int!
  primary: Int!
  junior_secondary: Int!
  senior_secondary: Int!
}
input Contacts {
  email: String!
  phone_number: String!
}
input SType {
  day_school: Data!
  boarding: Data!
}
input Approval {
  approved_date: String
  status: Data!
}
input Images {
  creche: String!
  nursery: String!
  after_school: String!
  primary: String!
  junior_secondary: String!
  senior_secondary: String!
}
